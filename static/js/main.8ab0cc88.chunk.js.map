{"version":3,"sources":["modules/model.ts","modules/context.tsx","modules/cookie/cookie.ts","modules/login-page.tsx","modules/register-page.tsx","modules/home-modules/invoice-item.tsx","modules/home-modules/items-list.tsx","modules/home-page.tsx","modules/add-edit-modules/cusomer.tsx","modules/add-edit-modules/products.tsx","modules/add-edit-modules/product-item.tsx","modules/add-edit-modules/form.tsx","modules/add-edit-invoice.tsx","App.tsx","index.tsx"],"names":["apiUrl","API","userData","apiRequest","data","accessToken","authToken","mode","invoiceData","itemData","endPath","invoiceId","idInvoice","customerId","itemId","method","endpoint","options","requestHeaders","requestBody","headers","JSON","stringify","requestOptions","body","fetch","then","res","json","cookie","cookieResponse","regAuth","auth","decodeURI","document","split","filter","test","length","parse","join","getAuthCookie","Object","keys","isAuthenticated","userId","authDataFromCookie","AuthContext","React","createContext","authData","setNewAuthState","LoginPage","props","state","handleLogin","event","preventDefault","email","password","loginUser","login","error","setState","message","context","id","handleInputs","target","name","value","className","this","htmlFor","type","onChange","onClick","to","Component","contextType","RegisterPage","Date","toUTCString","handleRegister","values","registerNewUser","register","errorMessage","history","goBack","catch","Error","username","dob","InvoiceItem","editData","pathname","editInvoiceOptions","customerName","discount","total","handleDeleteInvoice","ItemsList","getInvoices","Promise","all","getCustomers","invoicesResponse","newCustomers","reduce","customersMap","entry","invoicesArray","newArr","invoice","createdById","invoiceCustomer","invoices","init","getInvoicesItems","listItems","forEach","item","key","push","deleteInvoiceById","newInvoices","content","HomePage","handleLogOut","logOut","getAddEditInvoiceOptions","CustomerInput","selectValue","customerHandler","customers","customer","option","address","setCustomersOption","ProductsInput","useState","currentSelect","setCurrentSelect","products","onptionsArray","product","i","price","addProductHandler","ProductItem","prices","itemOptions","totalPrice","toFixed","productName","quantity","quantityHandler","uniqId","deleteProductHandler","AddEditForm","pageMod","componentDidMount","setTotalInvoicePrice","componentDidUpdate","totalInvoicePrice","totalSum","sum","requestData","updateInvoiceById","productId","productPrice","productItemTemplate","setItemToInvoice","quantityValue","newProducts","map","updateInvoiceAndItemsHandler","newStateData","currentItem","deleteItemById","setProductItemInList","defaultProductsArray","fromEntries","productItems","itemComponent","discountHandler","discountValue","addInvoiceHandler","setInvoice","invoiceRes","setAddButton","setCancelButton","redirect","quantityArray","updateItemById","setEditModeState","getInvoiceById","getItemsOfInvoice","itemsRes","productsArray","currentProduct","newItem","placeholder","AddEditInvoice","pageMode","location","getProducts","customersArray","getSelectOptions","App","newAuthData","year","month","day","cookieStr","encodeURI","expires","setCookie","loginRoute","homeRoute","basename","process","Provider","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ab0cc88.chunk.js","sourcesContent":["interface InvoiceData {\n  customerId: string;\n  createdById: string;\n  discount: number;\n  total: number;\n}\n\ninterface ItemData {\n  quantity: number;\n  productId: string;\n  invoiceId: string;\n}\n\ninterface ApiRequestOptions {\n  authToken?: string;\n  data?: object;\n  headers?: object;\n  mode?: string;\n}\n\nfunction apiRequest(apiUrl: string) {\n  return (method: string, endpoint: string, options?: ApiRequestOptions) => {\n    \n    let requestHeaders: Record<string, string> = {\n      'Content-Type': 'application/json'\n    }\n    let requestBody: any = null;\n\n    if (typeof options === 'object') {\n      if (typeof options.headers === 'object') {\n        requestHeaders = { ...requestHeaders, ...options.headers };\n      }\n\n      if (typeof options.authToken === 'string') {\n        requestHeaders = { ...requestHeaders, 'Authorization': options.authToken }\n      }\n\n      if (options.data != null) {\n        if (typeof options.data !== 'string') {\n          requestBody = JSON.stringify(options.data);\n        } else {\n          requestBody = options.data;\n        }\n      }\n    }\n\n    const requestOptions = {\n      headers: requestHeaders,\n      body: requestBody,\n      method\n    };\n\n    return fetch(`${ apiUrl }/${ endpoint }`, requestOptions).then(res => {\n      if (options && options.mode) return res;\n      else return res.json();\n    });\n  }\n}\n\nclass API {\n\n  static apiRequest = apiRequest('https://ing-invoicing.herokuapp.com/api');\n\n  static register(userData: any) {\n    return API.apiRequest('POST', '/ing-users', {\n       data: userData \n    });\n  }\n\n  static login(userData: any) {\n    return API.apiRequest('POST', '/ing-users/login', {\n      data: userData \n    });\n  }\n\n  static logOut(accessToken: string) {\n    return API.apiRequest('POST', '/ing-users/logout', {\n      authToken: accessToken,\n      mode: 'non-json()'\n    });\n  }\n\n  static getCustomers(accessToken: string) {\n    return API.apiRequest('GET', '/customers', {\n      authToken: accessToken\n    });\n  }\n\n  static getProducts(accessToken: string) {\n    return API.apiRequest('GET', '/products', {\n      authToken: accessToken\n    });\n  }\n\n  static getInvoices(accessToken: string) {\n    return API.apiRequest('GET', '/invoices', {\n      authToken: accessToken\n    });\n  }\n\n  static setInvoice(accessToken: string, invoiceData: InvoiceData) {\n    return API.apiRequest('POST', '/invoices', {\n      authToken: accessToken,\n      data: invoiceData\n    });\n  }\n\n  static setItemToInvoice(accessToken: string, itemData: ItemData) {\n    const endPath = `/invoices/${itemData.invoiceId}/items`;\n\n    return API.apiRequest('POST', endPath, {\n      authToken: accessToken,\n      data: itemData\n    });\n  }\n\n  static getItemsOfInvoice(accessToken: string, idInvoice: string)  {\n    const endPath = `/invoices/${idInvoice}/items`;\n\n    return API.apiRequest('GET', endPath, {\n      authToken: accessToken\n    });\n  }\n\n  static getInvoiceById(accessToken: string, invoiceId: string) {\n    const endPath = `/invoices/${invoiceId}`;\n\n    return API.apiRequest('GET', endPath, {\n      authToken: accessToken\n    });\n  }\n\n  static getCustomerById(accessToken: string, customerId: string) {\n    const endPath = `/customers/${customerId}`;\n\n    return API.apiRequest('GET', endPath, {\n      authToken: accessToken\n    });\n  }\n\n  static deleteInvoiceById(accessToken: string, invoiceId: string) {\n    const endPath = `/invoices/${invoiceId}`;\n\n    return API.apiRequest('DELETE', endPath, {\n      authToken: accessToken\n    });\n  }\n\n  static updateInvoiceById(accessToken: string, invoiceId: string, invoiceData: any) {\n    const endPath = `/invoices/${invoiceId}`;\n\n    return API.apiRequest('PATCH', endPath, {\n      authToken: accessToken,\n      data: invoiceData\n    });\n  }\n\n  static updateItemById(accessToken: string, invoiceId: string, itemId: string, itemData: any) {\n    const endPath = `/invoices/${invoiceId}/items/${itemId}`;\n\n    return API.apiRequest('PUT', endPath, {\n      authToken: accessToken,\n      data: itemData\n    });\n  }\n\n  static deleteItemById(accessToken: string, invoiceId: string, itemId: string) {\n    const endPath = `/invoices/${invoiceId}/items/${itemId}`;\n\n    return API.apiRequest('DELETE', endPath, {\n      authToken: accessToken,\n      mode: 'non-json()'\n    });\n  }\n}\n\nexport default API;","import { getAuthCookie } from './cookie/cookie';\nimport React from 'react';\n\ntype Cookie = {\n  isAuthenticated: boolean;\n  accessToken: string;\n  userId: string;\n};\n\nexport type AuthData = {\n  isAuthenticated: boolean;\n  userId: string;\n  accessToken: string;\n};\n\nexport interface IContext {\n  authData: AuthData;\n  setNewAuthState: (userData: AuthData) => void;\n}\n\nconst cookie: Cookie = ((): Cookie => {\n  const unAuthenticated: Cookie = {\n    isAuthenticated: false,\n    accessToken: '',\n    userId: '',\n  };\n\n  const cookieResponse: any = getAuthCookie();\n\n  if (!Object.keys(cookieResponse).length) return unAuthenticated;\n  else return cookieResponse;\n})();\n\nexport const authDataFromCookie: AuthData = {\n  isAuthenticated: cookie.isAuthenticated,\n  userId: cookie.userId,\n  accessToken: cookie.accessToken,\n};\n\nconst AuthContext = React.createContext<IContext>({\n  authData: authDataFromCookie,\n  setNewAuthState: (userData: AuthData) => void {},\n});\n\nexport default AuthContext;\n","export const setCookie = (key: string, value: string, year: number, month: number, day: number): void => {\n  let cookieStr = encodeURI(key) + '=' + encodeURI(value);\n\n  if (year) {\n    const expires = new Date(year, month-1, day);\n    cookieStr += '; expires=' + encodeURI(expires.toUTCString());\n  }\n\n  document.cookie = cookieStr;\n};\n\nexport const getAuthCookie = (): object => {\n  const regAuth = /^auth=/;\n  const auth = decodeURI(document.cookie).split('; ').filter(cookie => {\n    if (regAuth.test(cookie)) {\n      return cookie;\n    }\n  });\n\n  if (auth.length) {\n    return JSON.parse(auth.join().split('=')[1]);\n  } else {\n    return {};\n  }\n};","//Lib\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport API from './model';\nimport AuthContext from './context';\n\n//types\nimport { LoginPageStateType } from './pages-types';\n\n\nclass LoginPage extends React.Component {\n  static contextType = AuthContext;\n  public state: LoginPageStateType;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      userData: {\n        email: '',\n        password: '',\n      },\n      error: '',\n    };\n  }\n\n  handleLogin = (event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>): void => {\n    event.preventDefault();\n\n    if (\n      this.state.userData.email === '' \n      ||\n      this.state.userData.password === ''\n    ) return;\n\n    this.loginUser();\n  };\n\n  loginUser = (): void => {\n    API.login(this.state.userData)\n    .then((res) => {\n      if (res.error) {\n        this.setState({ error: res.error.message });\n      } else {\n        this.context.setNewAuthState({\n          isAuthenticated: true,\n          userId: res.userId,\n          accessToken: res.id,\n        });\n      }\n    });\n  };\n\n  handleInputs = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({\n      userData: {\n        ...this.state.userData,\n        [event.target.name]: event.target.value,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"section home-bg\">\n        <div className=\"row register-block bg-forms rounded text-white text-center justify-content-center p-4\">\n          <form>\n\n            <h1 className=\"text-center\">\n              Login\n            </h1>\n\n            <div className=\"text-danger\">\n              {this.state.error}\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"login-email\">Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"login-email\"\n                    name=\"email\"\n                    onChange={this.handleInputs}\n                    value={this.state.userData.email}\n                  />\n                </div>\n              </div>\n\n              <div className=\"col-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"login-password\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"login-password\"\n                    name=\"password\"\n                    onChange={this.handleInputs}\n                    value={this.state.userData.password}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row justify-content-center\">\n              <div className=\"col\">\n                <button \n                  type=\"submit\" \n                  className=\"btn btn-sign btn-block\" \n                  onClick={this.handleLogin}\n                  >\n                    Sign in ⚡\n                </button>\n              </div>\n\n              <div className=\"col ml-2\">\n                <Link to=\"/register\" className=\"text-decoration-none\">\n                  <button\n                   type=\"button\" \n                   className=\"btn btn-edit-btn btn-block\"\n                   >\n                    Register\n                  </button>\n                </Link>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","//Lib\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from './context';\nimport API from './model';\n\n// Types\nimport { RegisterPageStateType } from './pages-types';\n\n\nclass RegisterPage extends React.Component {\n  static contextType = AuthContext;\n  public state: RegisterPageStateType;\n  public props: any;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      userData: {\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        dob: '',\n      },\n      errorMessage: '',\n    };\n  }\n\n  handleInputs = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({\n      userData: {\n        ...this.state.userData,\n        [event.target.name]: event.target.value,\n        dob: new Date().toUTCString(),\n      },\n    });\n  };\n\n  handleRegister = (event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>): void => {\n    event.preventDefault();\n\n    for (let key of Object.values(this.state.userData)) {\n      if (key === '') return;\n    }\n\n    this.registerNewUser();\n  };\n\n  registerNewUser = (): void => {\n    API.register(this.state.userData)\n    .then((res) => {\n      if (res.error) {\n        this.setState({ errorMessage: res.error.message });\n      } else {\n        this.props.history.goBack();\n      }\n    })\n    .catch((error: any) => new Error(error));\n  };\n\n  render() {\n    return (\n      <div className=\"section home-bg\">\n        <div className=\"row register-block bg-forms rounded text-white text-center justify-content-center p-4\">\n          <form>\n\n            <h1 className=\"text-center\">\n              Register\n            </h1>\n\n            <div className=\"text-danger\">\n              {this.state.errorMessage}\n            </div>\n            \n            <div className=\"row\">\n              <div className=\"col-lg col-md-6 col-sm-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"register-name\">Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"register-name\"\n                    name=\"name\"\n                    onChange={this.handleInputs}\n                    value={this.state.userData.name}\n                  />\n                </div>\n              </div>\n\n              <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                <div className=\"form-group ml-2 ml-sm-0\">\n                  <label htmlFor=\"register-username\">User name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"register-username\"\n                    name=\"username\"\n                    onChange={this.handleInputs}\n                    value={this.state.userData.username}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-md-6 col-sm-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"register-email\">Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"register-email\"\n                    name=\"email\"\n                    onChange={this.handleInputs}\n                    value={this.state.userData.email}\n                  />\n                </div>\n              </div>\n\n              <div className=\"col-lg-12 col-md-6 col-sm-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"register-password\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"register-password\"\n                    name=\"password\"\n                    onChange={this.handleInputs}\n                    value={this.state.userData.password}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row justify-content-center text-center\">\n              <div className=\"col-6\">\n                <button \n                  type=\"submit\" \n                  className=\"btn btn-sign btn-block\" \n                  onClick={this.handleRegister}\n                  >\n                    Sign up ⚡\n                </button>\n              </div>\n\n              <div className=\"col-6\">\n                <Link to=\"/login\" className=\"text-decoration-none\">\n                  <button \n                    type=\"button\" \n                    className=\"btn btn-edit-btn btn-block\"\n                    >\n                      Sign in\n                  </button>\n                </Link>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RegisterPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { InvoiceItemProps } from './home-modules-types';\n\n\nconst InvoiceItem = (props: InvoiceItemProps) => {\n\n  const deleteItem = () => {\n    props.handleDeleteInvoice(props.invoiceData.invoiceId);\n  };\n\n  const handleDeleteItem = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    deleteItem();\n  };\n\n  let editData = {\n    pathname: props.editInvoiceOptions.pathname,\n    state: {\n      mode: props.editInvoiceOptions.state.mode,\n      invoiceData: props.invoiceData\n    }\n  };\n\n  return (\n    <div className=\"bg-list-item rounded text-white mb-2 list-item\">\n      <div className=\"col\">\n        <div className=\"row p-2 justify-content-between align-items-center\">\n          <div className=\"col-lg-3 col-md-4 col-sm-12 col-xs-12 \">\n\n            <div className=\"row\">\n              {props.invoiceData.customerName}\n            </div>\n\n            <div className=\"row text-half-white\">\n              #ID&nbsp;-&nbsp;\n              {props.invoiceData.invoiceId}\n            </div>\n\n          </div>\n\n          <div className=\"col-lg-2 col-md-1 col\">\n            Discount: {props.invoiceData.discount}%\n          </div>\n\n          <div className=\"col-lg-2 col-md-1 col\">\n            Total: {props.invoiceData.total}\n          </div>\n\n          <div className=\"col-lg-2 col-md-2 col\">\n            <div className=\"row justify-content-end \">\n\n              <Link to={editData}>\n                <button className=\"btn btn-edit-btn text-white\">\n                  edit\n                </button>\n              </Link>\n\n              <button \n                className=\"btn btn-home-delete ml-2\" \n                onClick={handleDeleteItem}\n              >\n                del\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InvoiceItem;\n","//Lib\nimport React from 'react';\nimport API from '../model';\nimport AuthContext from '../context';\n\n//Modules\nimport InvoiceItem from './invoice-item';\nimport {\n  InvoiceData,\n  ItemsListProps,\n  ItemListStateType \n} from './home-modules-types';\n\n\nclass ItemsList extends React.Component {\n  static contextType = AuthContext;\n  public props: ItemsListProps;\n  public state: ItemListStateType;\n\n  constructor(props: ItemsListProps) {\n    super(props);\n    this.props = props;\n    this.state = {\n      invoices: [],\n      init: false,\n    };\n  }\n\n  getInvoices = (): void => {\n    Promise.all([\n      API.getInvoices(this.context.authData.accessToken),\n      API.getCustomers(this.context.authData.accessToken)\n    ])\n    .then(([invoicesResponse, customers]) => {\n\n      let newCustomers = customers\n      .reduce((customersMap: any, entry: any) => {\n        customersMap[entry.id] = entry;\n        return customersMap;\n      }, {});\n\n      let invoicesArray: object[] = invoicesResponse\n      .reduce((newArr: any, invoice: any) => {\n\n        if (invoice.createdById === this.context.authData.userId) {\n          let invoiceCustomer: any = newCustomers[invoice.customerId];\n\n          let invoiceData: InvoiceData = {\n            invoiceId: invoice.id,\n            total: invoice.total,\n            discount: invoice.discount,\n            customerId: invoice.customerId,\n            customerName: invoiceCustomer.name\n          };\n\n          return newArr = [...newArr, invoiceData];\n        } else {\n          return newArr;\n        }\n      }, []);\n      \n      this.setState({\n        invoices: invoicesArray,\n        init: true\n      });\n    });\n  };\n\n  getInvoicesItems = (): Array<React.ReactNode> | void => {\n\n    if (this.state.invoices.length) {\n      let listItems: Array<React.ReactNode | null> = [];\n\n      this.state.invoices.forEach((invoiceData: any) => {\n\n        let item: React.ReactNode = (\n          <InvoiceItem\n            key={invoiceData.invoiceId}\n            invoiceData={invoiceData}\n            handleDeleteInvoice={this.handleDeleteInvoice}\n            editInvoiceOptions={this.props.editInvoiceOptions}\n          />\n        );\n\n        listItems.push(item);\n      });\n\n      return listItems;\n    }\n  };\n\n  handleDeleteInvoice = (invoiceId: string): void => {\n    API.deleteInvoiceById(this.context.authData.accessToken, invoiceId)\n    .then(() => {\n      let newInvoices = this.state.invoices.filter(\n        (invoice: any) => invoice.invoiceId !== invoiceId\n      );\n      \n      this.setState({ invoices: newInvoices });\n    });\n  };\n\n\n  render() {\n    if (!this.state.init) {\n      this.getInvoices();\n    }\n\n    let content: any = null;\n\n    if (!this.state.init) {\n      content = null;\n    } else if (this.state.invoices.length) {\n      content = this.getInvoicesItems();\n    } else if (this.state.init && !this.state.invoices.length) {\n      content = <h1 className=\"text-center h2 mt-4\">You don't have invoices yet.</h1>;\n    }\n\n    return (\n      <div className=\"col-lg-9 col-md-9 col-sm-12 col-xs-11 p-2 invoices-list\">\n        {content}\n      </div>\n    );\n  }\n}\n\nexport default ItemsList;\n","//Lib\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport API from './model';\nimport AuthContext from './context';\n\n//Modules\nimport ItemsList from './home-modules/items-list';\n\n//types\nimport { Mode, AddEditInvoiceOptions } from './pages-types';\n\n\nclass HomePage extends React.Component {\n  static contextType = AuthContext;\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  handleLogOut = (event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>): void => {\n    event.preventDefault();\n    this.logOut();\n  };\n\n  logOut = (): void => {\n    API.logOut(this.context.authData.accessToken)\n      .then(() => {\n        this.context.setNewAuthState({\n          isAuthenticated: false,\n          userId: '',\n          accessToken: '',\n        });\n      })\n      .catch((error) => new Error(error));\n  };\n\n  getAddEditInvoiceOptions = (mode: Mode): AddEditInvoiceOptions => {\n    const options: AddEditInvoiceOptions = {\n      pathname: '/add-edit-invoice',\n      state: {\n        mode: mode\n      }\n    };\n\n    return options;\n  };\n\n  render() {\n    return (\n      <div className=\"home-page\">\n        <div className=\"row content-home\">\n          <div className=\"col-lg-2 col-md-2 col-sm-12 mh-100 bg-aside aside-content\">\n            \n            <h2 className=\"m-3 text-white text-center logo\">\n              Wolf ☪ Inc.\n            </h2>\n\n            <div className=\"col d-flex flex-column justify-content-between text-center aside-container\">\n\n              <Link \n                to={this.getAddEditInvoiceOptions('add')}\n              >\n                <button className=\"btn btn-add-btn mt-3 border-white add-btn w-100\">\n                  Add invoice\n                </button>\n              </Link>\n\n              <button \n                className=\"btn btn-log-out border-secondary log-out\" \n                onClick={this.handleLogOut}\n              > Log out </button>\n            </div>\n          </div>\n        </div>\n\n        <ItemsList\n          editInvoiceOptions={this.getAddEditInvoiceOptions('edit')}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from 'react';\n\n\nconst CustomerInput = (props: any) => {\n\n  const setCustomersOption = (): object[] => {\n    let options: object[] = [];\n\n    props.customers.forEach((customer: any) => {\n\n        let option: object  = (\n          <option key={customer.id} value={customer.id}>\n            {customer.name + ' --- ' + ' Address: ' + customer.address}\n          </option>\n        );\n\n      options.push(option);\n    });\n\n    return options;\n  };\n\n\n  const setCustomerState = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    event.preventDefault();\n    props.customerHandler(event.target.value);\n  };\n\n  let selectValue = props.customerId ? props.customerId :\n   props.invoiceData !== {} ? props.invoiceData.customerId : false;\n\n  return (\n    <div className=\"col-12 text-left\">\n      <label htmlFor=\"add-customer\">Customer</label>\n      <select\n       className=\"form-control\" \n       id=\"add-customer\" \n       onChange={setCustomerState} \n       value={selectValue}>\n         \n        <option value=\"none\">Select customer</option>\n\n        {setCustomersOption()}\n\n      </select>\n    </div> \n  );\n};\n\nexport default CustomerInput;","import React, { useState } from 'react';\n\nconst ProductsInput = (props: any) => {  \n\n  let [currentSelect, setCurrentSelect] = useState('none');\n\n  const getProductsOption = (): Array<React.ReactNode> => {\n\n    const options: Array<React.ReactNode> = props.products\n    .reduce((\n        onptionsArray: Array<React.ReactNode>,\n        product: any,\n        i: number\n    ) => {\n\n      let option: React.ReactNode = (\n        <option key={i} value={product.id}>\n          {product.name + ' --- ' + product.price + '$'}\n        </option>\n      );\n\n      onptionsArray.push(option);\n      \n      return onptionsArray;\n    }, []);\n\n    return options;\n  };\n\n  const addProductHandler = () => {\n    props.addProductHandler(currentSelect);\n  };\n\n  const addProduct = (event: React.MouseEvent<HTMLButtonElement>): void =>  {\n    event.preventDefault();\n    if (currentSelect === 'none') {\n      return;\n    } else {\n      addProductHandler();\n    }\n  };\n\n  const selectHandler = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setCurrentSelect(event.target.value);\n  };\n\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-12 text-left\">\n        <label htmlFor=\"add-product\">\n          Product\n        </label>\n      </div>\n\n      <div className=\"col-lg-8 col-md-8 col-sm-12\">\n          <select\n           className=\"form-control\" \n           id=\"add-product\" \n           onChange={selectHandler}\n           >\n            <option value=\"none\">\n              Select product\n            </option>\n\n            {getProductsOption()}\n            \n          </select>\n      </div>\n\n      <div className=\"col-lg-4 col-md-4 col-sm-12 text-right add-product-btn\">\n        <button\n         className=\"btn btn-add-product\" \n         onClick={addProduct}\n        > \n         Add product\n        </button>\n      </div>  \n    </div>\n  );\n};\n\nexport default ProductsInput;","import React from 'react';\n\nconst ProductItem = (props: any) => {\n\n  const changeQuantity = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    event.preventDefault();\n    props.quantityHandler(event, props.itemOptions.uniqId);\n  };\n\n  const handleDelete = (): void => {\n    props.deleteProductHandler(props.itemOptions.uniqId);\n  };\n\n  const deleteProduct = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    event.preventDefault();\n    handleDelete();\n  };\n\n  const prices: string = props.itemOptions.totalPrice.toFixed(2) + '$';\n\n  return (\n    <div className=\"col-12 mb-2\">\n      <div className=\"row product justify-content-between align-items-center p-1 bg-product text-dark rounded\">\n        <div className=\"col-lg-4 col-6 order-lg-1 order-1 mb-ms-0\">\n          {props.productName}\n        </div>\n        \n        <div className=\"col-lg-2 col-6 d-flex justify-content-between order-lg-2 order-3\">\n          <input\n           className=\"w-100 bg-product\" \n           type=\"number\" \n           id=\"quantity\" \n           value={props.itemOptions.quantity} \n           onChange={changeQuantity} \n          />\n        </div>\n\n        <div className=\"col-lg-4 col-6 order-lg-3 order-2 mb-ms-0\">\n          Prices: {prices}\n        </div>\n\n        <div className=\"col-lg-2 col-6 order-lg-4 order-4\">\n          <button\n           className=\"btn-sm btn-delete product-btn-del\" \n           onClick={deleteProduct}\n           >\n            del 🗑\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductItem;","//Lib\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport API from '../model';\nimport AuthContext from '../context';\n\n//Components\nimport CustomerInput from './cusomer';\nimport ProductsInput from './products';\nimport ProductItem from './product-item';\n\ntype InvoiceData = {\n  customerId?: string;\n  createdById?: string;\n  discount?: number;\n  total?: number;\n};\n\nclass AddEditForm extends React.Component {\n  static contextType = AuthContext;\n  public props: any;\n  public state: any;\n  public pageMod: 'add' | 'edit';\n\n  constructor(props: any) {\n    super(props);\n    this.pageMod = props.pageMod;\n\n    this.state = {\n      customer: '',\n      products: [],\n      discount: 0,\n      totalInvoicePrice: 0,\n      redirect: false\n    };\n  }\n\n  componentDidMount = () => {\n    this.setTotalInvoicePrice();\n  }\n\n  componentDidUpdate = () => {\n    if (this.state.products.length) {\n      this.setTotalInvoicePrice();\n\n    } else if (this.state.totalInvoicePrice > 0) {\n      this.setState({totalInvoicePrice: 0});\n    }\n  }\n\n  setTotalInvoicePrice = () => {\n      if (this.state.products.length) {\n        let totalSum = this.state.products\n        .reduce((sum: number, item: any) => {\n          return sum += item.totalPrice;\n        }, 0);\n  \n        if (this.state.discount > 0) {\n          totalSum -= (totalSum / 100) * this.state.discount;\n        }\n    \n        totalSum = +totalSum.toFixed(2);\n  \n        if (this.state.totalInvoicePrice !== totalSum) {\n          this.setState({totalInvoicePrice: totalSum});\n        }\n      } else {\n        this.setState({totalInvoicePrice: 0});\n      } \n  }\n\n  customerHandler = (customerId: string): void => {\n    if (this.pageMod === 'add') {\n      this.setState({customer: customerId});\n\n    } else {\n      let requestData = {\n       customerId: customerId\n      };\n\n      API.updateInvoiceById(\n        this.context.authData.accessToken,\n        this.props.invoiceData.invoiceId,\n        requestData\n      ).then(invoice =>  {\n        this.setState({\n          customer: invoice.customerId\n        });\n      });\n    }\n  }\n\n  addProductHandler = (productId: string): void => {\n\n    let productPrice: number = 0;\n\n    this.props.products.forEach((product: any) => {\n      if (product.id === productId) {\n        productPrice = product.price;\n      }\n    });\n\n    let productItemTemplate = {\n      products: [\n        ...this.state.products,\n        {\n          id: productId,\n          quantity: 1,\n          uniqId: this.state.products.length,\n          price: productPrice,\n          totalPrice: productPrice\n        }\n      ]\n    };\n\n    if (this.pageMod === 'add') {\n      this.setState(productItemTemplate);\n    } else {\n\n      let itemData = {\n        quantity: 1,\n        productId: productId,\n        invoiceId: this.props.invoiceData.invoiceId\n      };\n\n      API.setItemToInvoice(\n        this.context.authData.accessToken, \n        itemData\n      ).then(() => {\n        this.setState(productItemTemplate);\n      });\n    } \n  }\n\n  quantityHandler = (event: React.ChangeEvent<HTMLInputElement>, uniqId: string): void => {\n\n    const value = event.target.value;\n    const quantityValue = (+value > 0 || value === '') ? value : 1;\n\n    const newProducts = this.state.products\n    .map((product: any) => {\n      if (product.uniqId === uniqId) {\n        product.quantity = quantityValue;\n        product.totalPrice = product.price * product.quantity;\n      } \n      return product;\n    });\n\n    if (this.pageMod === 'add') {\n      this.setState({\n        products: [...newProducts]\n      }); \n\n    } else {\n      this.updateInvoiceAndItemsHandler('quantity', newProducts);\n    }\n  }\n\n  deleteProductHandler = (uniqId: string): void => {\n\n    const newStateData = {\n        products: [\n          ...this.state.products.filter(\n            (product: any) => product.uniqId !== uniqId\n          )\n        ]\n    };\n\n    if (this.pageMod === 'add') {\n      this.setState(newStateData);\n    } else {\n      let currentItem = this.state.products.filter(\n        (product: any) => product.uniqId === uniqId\n      )[0];\n\n      API.deleteItemById(\n        this.context.authData.accessToken, \n        this.props.invoiceData.invoiceId,\n        currentItem.itemId\n      ).then(() => this.setState(newStateData));\n    }\n  }\n\n  setProductItemInList = (): Array<React.ReactNode> => {\n\n    const defaultProductsArray = Object.fromEntries(\n      \n      this.props.products.map((product: any) => {\n        return [product.id, product.name];\n      })\n      );\n\n    const productsOfInvoiceArray = this.state.products\n    .reduce((productItems: Array<React.ReactNode>, item: any, i: number) => {\n      \n      let itemComponent = (\n      <ProductItem\n        productName={defaultProductsArray[item.id]} \n        key={item.id + i} \n        deleteProductHandler={this.deleteProductHandler} \n        quantityHandler={this.quantityHandler}\n        itemOptions={item}\n      />\n      );\n      \n      productItems.push(itemComponent);\n      return productItems;\n      \n    }, []);\n\n    return productsOfInvoiceArray;\n  }\n\n  discountHandler = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    if (this.pageMod === 'add') {\n      this.setState({discount: event.target.value});\n\n    } else {\n\n      let discountValue = event.target.value;\n\n      let requestData = {\n        discount: discountValue,\n        total: this.state.totalInvoicePrice\n      };\n\n      API.updateInvoiceById(\n        this.context.authData.accessToken, \n        this.props.invoiceData.invoiceId, \n        requestData\n      ).then(() => {\n        this.setState({\n          discount: discountValue\n        })\n      });\n   }\n  }\n\n  addInvoiceHandler = (event: React.MouseEvent<HTMLButtonElement | HTMLLinkElement>): void => {\n    event.preventDefault();\n\n    if (!this.state.products.length || !this.state.customer) {\n      return;\n    }\n\n    let invoiceData = {\n      customerId: this.state.customer,\n      createdById: this.context.authData.userId,\n      discount: this.state.discount,\n      total: this.state.totalInvoicePrice\n    }\n\n    API.setInvoice(\n      this.context.authData.accessToken, \n      invoiceData\n      ).then(invoiceRes => {\n\n        this.state.products.forEach((product: any) => {\n\n          let itemData = {\n            quantity: product.quantity,\n            productId: product.id,\n            invoiceId: invoiceRes.id\n          };\n\n          API.setItemToInvoice(\n            this.context.authData.accessToken, \n            itemData\n          ).then(() => this.props.history.push('/home'));\n      });\n    });\n  }\n\n  setAddButton = (): React.ReactNode | undefined => {\n    if (this.pageMod === 'add') {\n      return (\n        <button \n          className=\"btn btn-add-btn\" \n          onClick={this.addInvoiceHandler}\n        >\n          Add invoice\n        </button>\n      );\n    } \n  }\n\n  setCancelButton = (): React.ReactNode => {\n    \n    const setRedirectStatus = (event: React.MouseEvent<HTMLButtonElement | HTMLLinkElement>): void => {\n      event.preventDefault();\n      this.setState({redirect: true});\n    };\n\n    if (this.pageMod === 'add') {\n      return (\n        <Link to='/home'>\n          <button className=\"btn btn-home-delete ml-2\">\n            Cancel\n          </button>\n        </Link>\n      );\n    } else {\n      return (\n        <button \n          className=\"btn btn-home-delete ml-2\" \n          onClick={setRedirectStatus}\n        >\n          Cancel\n        </button>\n      )\n    }\n  }\n\n  updateInvoiceAndItemsHandler = (mode: string, quantityArray?: any): void => {\n\n    let invoiceData: InvoiceData = {\n      customerId: this.state.customer,\n      createdById: this.context.authData.userId,\n      discount: this.state.discount,\n      total: this.state.totalInvoicePrice\n    };\n\n    if (mode === 'quantity') {\n      invoiceData = {\n        total: this.state.totalInvoicePrice\n      };\n    }\n\n    API.updateInvoiceById(\n      this.context.authData.accessToken, \n      this.props.invoiceData.invoiceId, \n      invoiceData\n    ).then(() => {\n      this.state.products.forEach((product: any) => {\n\n        let itemData = {\n          quantity: product.quantity,\n          productId: product.id,\n          invoiceId: this.props.invoiceData.invoiceId\n        };\n\n        API.updateItemById(\n          this.context.authData.accessToken, \n          this.props.invoiceData.invoiceId, \n          product.itemId, \n          itemData\n        ).then(() => {\n\n          if (mode === 'done') {\n            this.props.history.push('/home');\n\n          } else if (mode === 'quantity') {\n            this.setState({\n              products: [...quantityArray]\n            });\n          } \n        });\n      });\n    });\n  }\n\n  setEditModeState = (): void => {\n    Promise.all([\n      API.getInvoiceById(\n        this.context.authData.accessToken, \n        this.props.invoiceData.invoiceId\n      ),\n      API.getItemsOfInvoice(\n        this.context.authData.accessToken, \n        this.props.invoiceData.invoiceId\n      )\n    ])\n    .then(([invoiceRes, itemsRes]) => {\n\n        let productsArray: any = [];\n\n        itemsRes.forEach((item: any, i: number) => {\n          let currentProduct = this.props.products.filter(\n            (product: any) => item.productId === product.id\n          )[0];\n\n          let newItem = {\n            id: item.productId,\n            quantity: item.quantity,\n            uniqId: i,\n            price:  currentProduct ? currentProduct.price : 0 ,\n            totalPrice: currentProduct ? currentProduct.price * item.quantity : 0,\n            itemId: item.id\n          };\n\n          productsArray.push(newItem);\n        });\n\n        if (productsArray.length && productsArray[0].totalPrice > 0) {\n          this.setState({\n            customer: invoiceRes.customerId,\n            products: productsArray,\n            discount: invoiceRes.discount\n          });\n        }\n    });\n  }\n\n  render() {\n    if (!this.state.products.length && this.pageMod === 'edit') {\n      this.setEditModeState();\n    }\n\n    if (this.state.redirect) {\n      this.updateInvoiceAndItemsHandler('done');\n    }\n\n    const discountValue = this.state.discount === 0 ? '' : this.state.discount;\n\n    return (\n      <form>\n      {/* Total */}\n        <div className=\"row mb-3\">\n          <div className=\"col-12 text-left\">\n            <div className=\"total ts-2 h3\">\n              Total price: {this.state.totalInvoicePrice}\n            </div>\n          </div>\n        </div>\n\n      {/* Customer input */}\n        <div className=\"row mb-3\">\n          <CustomerInput\n            customers={this.props.customers} \n            customerHandler={this.customerHandler}\n            pageMod={this.props.pageMod}\n            invoiceData={this.props.invoiceData}\n            customerId={this.state.customer}\n          /> \n        </div>\n\n      {/* Product input */}\n        <ProductsInput\n          products={this.props.products} \n          addProductHandler={this.addProductHandler}\n        />\n\n      {/* Added products */}\n        <div className=\"row\">\n          {this.setProductItemInList()}\n        </div>\n\n      {/* Discount and ADD */}\n        <div className=\"row justify-content-between mt-3 align-items-end\">\n          <div className=\"col-lg-5 col-md-5 col-sm-12 text-left\">\n            <label htmlFor=\"discount-input\">\n              Discount\n            </label>\n\n            <input \n            type=\"text\" \n            className=\"form-control\" \n            id=\"discount-input\" \n            placeholder=\"Discount in %\" \n            onChange={this.discountHandler} \n            value={discountValue}/>\n          </div>\n\n          <div className=\"col-lg-5 col-md-5 col-sm-12 text-right add-invoice-form-btn\">\n            {this.setAddButton()}\n            {this.setCancelButton()}\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AddEditForm;","//Lib\nimport React from 'react';\nimport API from './model';\nimport AuthContext from './context';\n\n//Modules\nimport AddEditForm from './add-edit-modules/form';\n\n//types\nimport { AddEditInvoicePageStateType, InvoiceDataEditProp } from './pages-types';\n\n\nclass AddEditInvoice extends React.Component {\n  static contextType = AuthContext;\n  public props: any;\n  public pageMode: 'add' | 'edit';\n  public invoiceData: InvoiceDataEditProp | {};\n  public state: AddEditInvoicePageStateType;\n\n\n  constructor(props: any) {\n    super(props);\n    this.pageMode = props.location.state.mode;\n    this.invoiceData = props.location.state.invoiceData || {};\n    this.state = {\n      customers: [],\n      products: []\n    };\n  }\n\n  getSelectOptions(): void {\n    Promise.all([\n      API.getCustomers(this.context.authData.accessToken),\n      API.getProducts(this.context.authData.accessToken)\n    ])\n    .then(([customersArray, productsArray]) => {\n      this.setState(\n        { \n          customers: customersArray,\n          products: productsArray\n        }\n      )\n    });\n  }\n\n  render() {\n\n    if (!this.state.customers.length) {\n      this.getSelectOptions();\n    }\n\n    return (\n      <div className=\"home-bg\">\n        <div className=\"section\">\n          <div className=\"row register-block bg-forms rounded text-white text-center justify-content-center p-4\">\n            <div className=\"col-12\">    \n              \n              <AddEditForm\n               customers={this.state.customers} \n               products={this.state.products}\n               history={this.props.history} \n               pageMod={this.pageMode}\n               invoiceData={this.invoiceData}\n               />\n            \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddEditInvoice;","//Pages\nimport LoginPage from './modules/login-page';\nimport RegisterPage from './modules/register-page';\nimport HomePage from './modules/home-page';\nimport AddEditInvoice from './modules/add-edit-invoice';\n\n//Lib\nimport React from 'react';\nimport { setCookie } from './modules/cookie/cookie';\nimport { \n  BrowserRouter as Router,\n  Switch, \n  Route, \n  Redirect \n} from 'react-router-dom';\nimport AuthContext, {\n   authDataFromCookie, \n   AuthData, \n   IContext \n} from './modules/context';\n\n//Styles\nimport './custom_bootstrap.scss';\nimport './styles/main.sass';\n\n\nclass App extends React.Component {\n  static contextType = AuthContext;\n  public state: IContext;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      authData: authDataFromCookie,\n      setNewAuthState: this.setNewAuthState,\n    };\n  }\n\n  setNewAuthState = (userData: AuthData): void => {\n    const newAuthData: AuthData = {\n      isAuthenticated: userData.isAuthenticated,\n      userId: userData.userId,\n      accessToken: userData.accessToken,\n    };\n\n    setCookie('auth', JSON.stringify(newAuthData), 2100, 10, 1);\n    this.setState({ authData: newAuthData });\n  };\n\n  render() {\n    const isAuthenticated = this.state.authData.isAuthenticated;\n\n    const loginRoute: React.ReactNode = (\n      isAuthenticated ? <Redirect to=\"/home\" /> : <LoginPage />\n    );\n\n    const homeRoute: React.ReactNode = (\n      isAuthenticated ? <HomePage /> : <Redirect to=\"/login\" />\n    );\n\n    return (\n      <div>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <AuthContext.Provider value={this.state}>\n\n              <Route exact path=\"/\"> \n                <Redirect to=\"/login\"/> \n              </Route>\n\n              <Route path=\"/login\"> {loginRoute} </Route>\n\n              <Route path=\"/home\"> {homeRoute} </Route>\n              \n              <Route path=\"/register\" component={RegisterPage} />\n\n              <Route path=\"/add-edit-invoice\" component={AddEditInvoice} />\n\n            </AuthContext.Provider>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}